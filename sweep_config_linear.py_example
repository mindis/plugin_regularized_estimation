import os
import numpy as np
import linear_te
from mcpy import metrics
from mcpy import plotting
from mcpy import utils


def select_plotting(x, y, z, w):
    plotting.sweep_plot_pairwise_marginal_metrics(x, y, z, w, param_subset=[('$k_g$', '$\\sigma_\\eta$')],
                                                    select_vals={'$\\sigma_\\eta$': [2.0]}, filter_vals={'$\\sigma_\\epsilon$':[2.0, 3.0]})
    plotting.sweep_plot_pairwise_marginal_metric_comparisons(x, y, z, w, param_subset=[('$k_g$', '$\\sigma_\\eta$')],
                                                    select_vals={'$\\sigma_\\eta$': [2.0]}, filter_vals={'$\\sigma_\\epsilon$':[2.0, 3.0]})


CONFIG = {
        "dgps": {
            "dgp1": linear_te.gen_data
        },
        "dgp_opts": {
            '$n$': 5000, # samples used for estimation
            '$p$': 100, # dimension of controls x
            '$k_\\theta$': 1, # support size of target parameter
            '$k_g$': np.arange(1, 40, 3), # support size of nuisance
            '$\\sigma_\\eta$': [1.0, 2.0, 3.0],  # variance of error in secondary moment equation
            '$\\sigma_\\epsilon$': [1.0, 2.0, 3.0] # variance of error in primary moment equation
        },
        "methods": {
            "Direct": linear_te.direct_fit,
            "Ortho": linear_te.dml_fit,
            "CrossOrtho": linear_te.dml_crossfit
        },
        "method_opts": {
            'lambda_coef': 1.0, # coeficient in front of the asymptotic rate for regularization lambda
            'n_folds': 2 # number of folds in crossfitting
        },
        "metrics": {
            "$\\ell_2$ error": metrics.l2_error,
            "$\\ell_1$ error": metrics.l1_error
        },
        "plots": {
        },
        "sweep_plots":{
            "metrics": plotting.sweep_plot_marginal_metrics,
            "2dmetrics": plotting.sweep_plot_pairwise_marginal_metrics,
            "metric_comps": plotting.sweep_plot_marginal_metric_comparisons,
            "2dmetric_comps": plotting.sweep_plot_pairwise_marginal_metric_comparisons,
            "select_plots": select_plotting
        },
        "mc_opts": {
            'n_experiments': 100, # number of monte carlo experiments
            "seed": 123
        },
        "proposed_method": "CrossOrtho",
        "target_dir": "sweep_results",
        "reload_results": True
    }
